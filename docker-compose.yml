services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: konsi-api
    ports:
      - '3000:3000'
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      - rabbitmq
      - redis
      - elasticsearch
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - ELASTICSEARCH_URL=https://elasticsearch:9200
    command: npx ts-node-dev --respawn --transpile-only /usr/src/app/src/index.ts
    env_file:
      - .env
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: konsi-rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynetwork
    logging:
      driver: 'none'

  redis:
    image: redis:6
    container_name: konsi-redis
    ports:
      - '6379:6379'
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    networks:
      - mynetwork
    logging:
      driver: 'none'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: konsi-elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'logger.level=error'
      - ELASTIC_PASSWORD=2XmfUxpGy6wjvfD9l5c_
    mem_limit: 4g
    cpus: 2.0
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  redis-data:
